spring:
  application:
    name: codeplay

  config:
    import:
      - optional:file:env/local-spring.env[.properties]

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}

  sql:
    init:
      mode: never  # 데이터베이스 초기화 비활성화

  jpa:
    hibernate:
      ddl-auto: update  # Hibernate 엔티티 스키마 자동 업데이트
    properties:
      jakarta.persistence.sharedCache.mode: ALL
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        show_sql: true
        format_sql: true
        use_sql_comments: true
        default_batch_fetch_size: 1000  # 배치 크기 설정 (성능 최적화)

  cloud:
    aws:
      credentials:
        accessKey: ${AWS_ACCESS_KEY_ID}
        secretKey: ${AWS_SECRET_ACCESS_KEY}
      region:
        static: ${AWS_DEFAULT_REGION}

cloud:
  aws:
    s3:
      bucket: ${S3_BUCKET}

jwt:
  secret: ${JWT_SECRET}

google:
  oauth2:
    client-id: ${GOOGLE_CLIENT_ID}
    client-secret: ${GOOGLE_CLIENT_SECRET}
    redirect-uri: ${GOOGLE_REDIRECT_URI}
    scope: "openid email profile"
    authorization-uri: "https://accounts.google.com/o/oauth2/v2/auth"
    token-uri: "https://oauth2.googleapis.com/token"
    user-info-uri: "https://openidconnect.googleapis.com/v1/userinfo"
    additional-parameters: "&access_type=offline&prompt=consent" # refresh token / 동의화면 매번 요청

kakao:
  oauth2:
    client-id: ${KAKAO_CLIENT_ID}
    client-secret: ${KAKAO_CLIENT_SECRET}
    redirect-uri: ${KAKAO_REDIRECT_URI}
    scope: "profile_nickname,account_email"
    authorization-uri: "https://kauth.kakao.com/oauth/authorize"
    token-uri: "https://kauth.kakao.com/oauth/token"
    user-info-uri: "https://kapi.kakao.com/v2/user/me"
    additional-parameters: ""